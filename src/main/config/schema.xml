<?xml version="1.0" encoding="UTF-8" ?>
<schema name="trademark" version="1.5">
    <fields>
        <field name="id" type="string" indexed="true" stored="true" required="true" multiValued="false" /> 
        <field name="trademark" type="text_trademark" indexed="true" stored="true" multiValued="true"/>
        <!--<field name="trademark_tokens" type="string" indexed="false" stored="true" multiValued="true"/>-->
        <field name="class_1" type="string" indexed="true" stored="true" multiValued="true"/>
        <field name="class_2" type="string" indexed="true" stored="true" multiValued="true"/>
        <field name="_version_" type="long" indexed="true" stored="true"/>
        <!-- catchall field, containing all other searchable text fields (implemented
        via copyField further on in this schema  -->
        <field name="text" type="text_general" indexed="true" stored="false" multiValued="true"/> 
    </fields>

    <uniqueKey>id</uniqueKey>

    <types>
        <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
        <fieldType name="string" class="solr.StrField" sortMissingLast="true" />
        

        <!-- Custom Field Type for analyzing and querying trademarks-->
        <fieldType name="text_trademark" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
          <analyzer type="index">
            <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\|" />
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            <filter class="solr.StopFilterFactory"
                    ignoreCase="true"
                    words="lang/stopwords_en.txt"
                    enablePositionIncrements="true"
                    />
            <filter class="solr.WordDelimiterFilterFactory" splitOnCaseChange="1" splitOnNumerics="0"  generateWordParts="1" stemEnglishPossessive="0"        generateNumberParts="0" catenateWords="1" catenateNumbers="0" catenateAll="0" preserveOriginal="1"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.DictionaryCompoundWordTokenFilterFactory" dictionary="english_words.txt" minWordSize="5" minSubwordSize="4"         maxSubwordSize="15" onlyLongestMatch="false"/>
            <filter class="solr.DoubleMetaphoneFilterFactory" inject="true"/>
            <!-- <filter class="solr.PhoneticFilterFactory" encoder="RefinedSoundex" inject="true"/> -->
            <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
          </analyzer>
          <analyzer type="query">
              <tokenizer class="solr.StandardTokenizerFactory"/>
              <filter class="solr.StandardFilterFactory"/>
              <filter class="solr.WordDelimiterFilterFactory" splitOnCaseChange="1" splitOnNumerics="0"  generateWordParts="1" stemEnglishPossessive="0"        generateNumberParts="0" catenateWords="1" catenateNumbers="0" catenateAll="0" preserveOriginal="1"/>
              <filter class="solr.LowerCaseFilterFactory"/>
              <filter class="solr.DictionaryCompoundWordTokenFilterFactory" dictionary="english_words.txt" minWordSize="5" minSubwordSize="4"         maxSubwordSize="15" onlyLongestMatch="false"/>
              <filter class="solr.LowerCaseFilterFactory"/>
              <filter class="solr.PorterStemFilterFactory"/>
              <filter class="solr.DoubleMetaphoneFilterFactory" inject="true" maxCodeLength="4"/>
          </analyzer>
        </fieldType>

        <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
            <!-- Configures the analysis done at the index phase -->
            <analyzer type="index">
                <!-- Uses word break rules of the Unicode Text Segmentation algorith when splitting text into words. -->
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <!-- Removes words found from stopwords.txt file. This filter is case insensitive. -->
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
                <!-- Transforms text to lower case -->
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
            <!-- Configures the analysis done at the query time -->
            <analyzer type="query">
                <!-- Uses word break rules of the Unicode Text Segmentation algorith when splitting text into words. -->
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <!-- Removes words found from stopwords.txt file. This filter is case insensitive. -->
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
                <!-- Applies synonyms found from the synonyms.txt file. -->
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
                <!-- Transforms text to lower case -->
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
        </fieldType>
    </types>
</schema>
